function settings_fcn = digitalHomodyne_GUI(parent, bottom, left, settings)
% DIGITALHOMODYNE_BUILD
%-------------------------------------------------------------------------------
% File name   : digitalHomodyne_build.m       
% Generated on: 07-Oct-2010 16:13:57          
% Description :
%-------------------------------------------------------------------------------


% Initialize handles structure
handles = struct();

% if there is no parent figure given, generate one
if nargin < 1 || ~isnumeric(parent)
	handles.figure1 = figure( ...
			'Tag', 'figure1', ...
			'Units', 'characters', ...
			'Position', [103.833333333333 13.8571428571429 64 12], ...
			'Name', 'Digital Homodyne', ...
			'MenuBar', 'none', ...
			'NumberTitle', 'off', ...
			'Color', get(0,'DefaultUicontrolBackgroundColor'));
	
	left = 10.0;
	bottom = 10.0;
else
	handles.figure1 = parent;
end

modes = {'OFF', 'DH1', 'DIQ'};

% Create all UI controls
build_gui();

if nargin < 4
	settings = struct();
end
set_defaults(settings);

% Assign function output
settings_fcn = @get_settings;

%% ---------------------------------------------------------------------------
	function build_gui()
% Creation of all uicontrols

		% --- PANELS -------------------------------------
		handles.uipanel1 = uipanel( ...
			'Parent', handles.figure1, ...
			'Tag', 'uipanel1', ...
			'Units', 'pixels', ...
			'Position', [left bottom 290 90], ...
			'FontName', 'Helvetica', ...
			'FontSize', 10, ...
			'Title', 'Digital Homodyne');

		% --- STATIC TEXTS -------------------------------------
		handles.text1 = uicontrol( ...
			'Parent', handles.uipanel1, ...
			'Tag', 'text1', ...
			'Style', 'text', ...
			'Units', 'characters', ...
			'Position', [2.66666666666667 3.35714285714286 8.66666666666667 1], ...
			'FontName', 'Helvetica', ...
			'FontSize', 10, ...
			'String', 'Mode');

		handles.text2 = uicontrol( ...
			'Parent', handles.uipanel1, ...
			'Tag', 'text2', ...
			'Style', 'text', ...
			'Units', 'characters', ...
			'Position', [16.1666666666667 3.35714285714286 17 1], ...
			'FontName', 'Helvetica', ...
			'FontSize', 10, ...
			'String', 'IF Freq (MHz)');

		handles.text4 = uicontrol( ...
			'Parent', handles.uipanel1, ...
			'Tag', 'text4', ...
			'Style', 'text', ...
			'Units', 'characters', ...
			'Position', [32.3333333333333 3.35714285714286 14 1], ...
			'FontName', 'Helvetica', ...
			'FontSize', 10, ...
			'String', 'Phase (deg)');

		% --- EDIT TEXTS -------------------------------------
		handles.IFfreq = uicontrol( ...
			'Parent', handles.uipanel1, ...
			'Tag', 'IFfreq', ...
			'Style', 'edit', ...
			'Units', 'characters', ...
			'Position', [17.6666666666667 1.42857142857143 9.66666666666667 1.57142857142857], ...
			'BackgroundColor', [1 1 1], ...
			'FontName', 'Helvetica', ...
			'FontSize', 10, ...
			'String', '0');

		handles.phase = uicontrol( ...
			'Parent', handles.uipanel1, ...
			'Tag', 'phase', ...
			'Style', 'edit', ...
			'Units', 'characters', ...
			'Position', [33.8333333333333 1.42857142857143 9.66666666666667 1.57142857142857], ...
			'BackgroundColor', [1 1 1], ...
			'FontName', 'Helvetica', ...
			'FontSize', 10, ...
			'String', '0');

		% --- POPUP MENU -------------------------------------
		handles.DHmode = uicontrol( ...
			'Parent', handles.uipanel1, ...
			'Tag', 'DHmode', ...
			'Style', 'popupmenu', ...
			'Units', 'characters', ...
			'Position', [2.83333333333333 1.57142857142857 10 1.57142857142857], ...
			'BackgroundColor', [1 1 1], ...
			'FontName', 'Helvetica', ...
			'FontSize', 10, ...
			'String', modes);


	end

	function selected = get_selected(hObject)
		menu = get(hObject,'String');
		selected = menu{get(hObject,'Value')};
    end

	function set_selected(hObject, val)
		menu = get(hObject, 'String');
		index = find(strcmp(val, menu));
		if ~isempty(index)
			set(hObject, 'Value', index);
		end
	end

	function value = get_numeric(hObject)
		value = str2num(get(hObject, 'String'));
	end

	function settings = get_settings()
		settings = struct();
		
		settings.DHmode = get_selected(handles.DHmode);
		settings.IFfreq = get_numeric(handles.IFfreq);
		settings.phase = get_numeric(handles.phase);
    end

    function set_defaults(settings)
		% define default values for fields. If given a settings structure, grab
		% defaults from it
		defaults.DHmode = 'DH1';
        defaults.IFfreq = 1;
        defaults.phase = 0;

		if ~isempty(fieldnames(settings))
			fields = fieldnames(settings);
			for i = 1:length(fields)
				name = fields{i};
				defaults.(name) = settings.(name);
			end
		end
		
		set_selected(handles.DHmode, defaults.DHmode);
		set(handles.IFfreq, 'String', num2str(defaults.IFfreq));
        set(handles.phase, 'String', num2str(defaults.phase));

	end

end
