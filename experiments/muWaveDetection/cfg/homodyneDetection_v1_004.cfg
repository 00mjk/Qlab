
SoftwareDevelopmentMode     0 #In software developement mode no instruments are really used

# number of steps in experiment loop
expType                     homodyneDetection

#######################################################################
############################ Exp Params ###############################
#######################################################################

# parameters for phase qubit flux pulse
TaskParams.v1_pulse.taskParameters.deviceTag           fluxPulse # which device do these parameters pertain to?
TaskParams.v1_pulse.taskParameters.deviceName          AWG # which device do these parameters pertain to?
TaskParams.v1_pulse.taskParameters.pulseCH      	   1 #output channel for pulse device 
TaskParams.v1_pulse.taskParameters.marker              [1;1] # turn marker1/marker2 on
TaskParams.v1_pulse.waveform.start.time          [0;100;10e3;100;47.99e3;10;3.49e3;10;10;1/1.2;20;1/1.2;0]*1e-9 #in s
TaskParams.v1_pulse.waveform.end.time            [0;100;10e3;100;47.99e3;10;3.49e3;10;10;1/1.2;20;1/1.2;0]*1e-9 #in s
TaskParams.v1_pulse.waveform.start.amp           [0;0;0;0;0;0;0.0;0.0;0;0;0.000;0.000;0] #dimensionless
TaskParams.v1_pulse.waveform.end.amp             [0;0;0;0;0;0;0.0;0.0;0;0;0.000;0.000;0] #dimensionless
TaskParams.v1_pulse.waveform.start.marker1Start        72800 # point at which marker pulse starts
TaskParams.v1_pulse.waveform.end.marker1Start        72800 # point at which marker pulse starts
TaskParams.v1_pulse.waveform.start.marker1Length       500 # number of points in marker pulse width
TaskParams.v1_pulse.waveform.end.marker1Length       500 # number of points in marker pulse width
TaskParams.v1_pulse.waveform.start.marker1Amp          1.75 # marker pulse amp in Volts
TaskParams.v1_pulse.waveform.end.marker1Amp          1.75 # marker pulse amp in Volts
TaskParams.v1_pulse.waveform.start.marker2Start        77000 # point at which marker pulse starts
TaskParams.v1_pulse.waveform.end.marker2Start        94000 # point at which marker pulse starts
TaskParams.v1_pulse.waveform.start.marker2Length       500 # number of points in marker pulse width
TaskParams.v1_pulse.waveform.end.marker2Length       500 # number of points in marker pulse width
TaskParams.v1_pulse.waveform.start.marker2Amp          1.75 # marker pulse amp in Volts
TaskParams.v1_pulse.waveform.end.marker2Amp          1.75 # marker pulse amp in Volts
TaskParams.v1_pulse.maxAmp.start        1.5 #in V
TaskParams.v1_pulse.maxAmp.end          1.0 #in V
TaskParams.v1_pulse.offset.start        0.24 #in V
TaskParams.v1_pulse.offset.end          0.24 #in V

# parameters for phase qubit flux pulse
TaskParams.v2_pulse.taskParameters.deviceTag           fluxPulse # which device do these parameters pertain to?
TaskParams.v2_pulse.taskParameters.deviceName          AWG # which device do these parameters pertain to?
TaskParams.v2_pulse.taskParameters.pulseCH      	   2 #output channel for pulse device 
TaskParams.v2_pulse.taskParameters.marker              [0;0] # turn marker1/marker2 on
TaskParams.v2_pulse.maxAmp.start        1.0 #in V
TaskParams.v2_pulse.maxAmp.end          1.0 #in V
TaskParams.v2_pulse.offset.start        0.1 #in V .63 0.449
TaskParams.v2_pulse.offset.end          .9 #in V .65
TaskParams.v2_pulse.waveform.start.time          [0;0]*1e-9 #in s
TaskParams.v2_pulse.waveform.end.time            [0;0]*1e-9 #in s
TaskParams.v2_pulse.waveform.start.amp           [0;0] #dimensionless
TaskParams.v2_pulse.waveform.end.amp             [0;0] #dimensionless
# TaskParams.v2_pulse.waveform.start.marker1Start        72800 # point at which marker pulse starts
# TaskParams.v2_pulse.waveform.end.marker1Start        72800 # point at which marker pulse starts
# TaskParams.v2_pulse.waveform.start.marker1Length       500 # number of points in marker pulse width
# TaskParams.v2_pulse.waveform.end.marker1Length       500 # number of points in marker pulse width
# TaskParams.v2_pulse.waveform.start.marker1Amp          1.75 # marker pulse amp in Volts
# TaskParams.v2_pulse.waveform.end.marker1Amp          1.75 # marker pulse amp in Volts
# TaskParams.v2_pulse.waveform.start.marker2Start        94000 # point at which marker pulse starts
# TaskParams.v2_pulse.waveform.end.marker2Start        94000 # point at which marker pulse starts
# TaskParams.v2_pulse.waveform.start.marker2Length       500 # number of points in marker pulse width
# TaskParams.v2_pulse.waveform.end.marker2Length       500 # number of points in marker pulse width
# TaskParams.v2_pulse.waveform.start.marker2Amp          1.75 # marker pulse amp in Volts
# TaskParams.v2_pulse.waveform.end.marker2Amp          1.75 # marker pulse amp in Volts

# parameters for microwave pulse
TaskParams.MicrowavePulse.taskParameters.deviceTag           fluxPulse # which device do these parameters pertain to?
TaskParams.MicrowavePulse.taskParameters.deviceName          AWG # which device do these parameters pertain to?
TaskParams.MicrowavePulse.taskParameters.pulseCH      	     4 #output channel for pulse device 
TaskParams.MicrowavePulse.taskParameters.marker              [0;0]
TaskParams.MicrowavePulse.waveform.start.time          [76.0e3;2;1002;2;0]*1e-9 #in s
TaskParams.MicrowavePulse.waveform.end.time            [77.0e3;2;002;2;0]*1e-9 #in s
TaskParams.MicrowavePulse.waveform.start.amp           [0;0;0;0;0] #dimensionless
TaskParams.MicrowavePulse.waveform.end.amp             [0;0;0;0;0] #dimensionless
TaskParams.MicrowavePulse.maxAmp.start        2 #in V
TaskParams.MicrowavePulse.maxAmp.end          2 #in V
TaskParams.MicrowavePulse.offset.start        0 #in V
TaskParams.MicrowavePulse.offset.end          0 #in V

# parameters for readout pulse
TaskParams.readoutPulse.taskParameters.deviceTag           readoutPulse # which device do these parameters pertain to?
TaskParams.readoutPulse.taskParameters.deviceName          AWG # which device do these parameters pertain to?
TaskParams.readoutPulse.taskParameters.pulseCH      	   1 #output channel for pulse device 
TaskParams.readoutPulse.waveform.start.time          [1.1e3;2e3;30e3;2e3;0]*1e-9 #in s
TaskParams.readoutPulse.waveform.end.time            [1.1e3;2e3;30e3;2e3;0]*1e-9 #in s
TaskParams.readoutPulse.waveform.start.amp           [0;0;1;1;0] #dimensionless
TaskParams.readoutPulse.waveform.end.amp             [0;0;1;1;0] #dimensionless
TaskParams.readoutPulse.maxAmp.start        1 #in V
TaskParams.readoutPulse.maxAmp.end          1 #in V
TaskParams.readoutPulse.offset.start        0 #in V
TaskParams.readoutPulse.offset.end          0 #in V

# parameters for trigger source
TaskParams.triggerSource.taskParameters.deviceTag           triggerSource # which device do these parameters pertain to?
TaskParams.triggerSource.taskParameters.deviceName          AWG # which device do these parameters pertain to?
TaskParams.triggerSource.taskParameters.pulseCH      	    1 #output channel for pulse device 
TaskParams.triggerSource.waveform.start.time          [0;0;1e5;0;1e5]*1e-9 #in s
TaskParams.triggerSource.waveform.end.time            [0;0;1e5;0;1e5]*1e-9 #in s
TaskParams.triggerSource.waveform.start.amp           [0;0;1;1;0] #dimensionless
TaskParams.triggerSource.waveform.end.amp             [0;0;1;1;0] #dimensionless
TaskParams.triggerSource.maxAmp.start        1.5 #in V
TaskParams.triggerSource.maxAmp.end          1.5 #in V
TaskParams.triggerSource.offset.start        0 #in V
TaskParams.triggerSource.offset.end          0 #in V

#######################################################################

TaskParams.readout_muwave.taskParameters.deviceTag            readout_muwave
TaskParams.readout_muwave.taskParameters.deviceName           CWSource
TaskParams.readout_muwave.frequency.start      10.345 # min frequency in GHz 10.35624
TaskParams.readout_muwave.frequency.end        10.365 # max frequency in GHz
TaskParams.readout_muwave.power.start          10 # min frequency in dBm
TaskParams.readout_muwave.power.end             4 # max frequency in dBm

TaskParams.qubit_muwave.taskParameters.deviceTag            qubit_muwave
TaskParams.qubit_muwave.taskParameters.deviceName           CWSource
TaskParams.qubit_muwave.frequency.start      3.5  # min frequency in GHz
TaskParams.qubit_muwave.frequency.end        5  # max frequency in GHz
TaskParams.qubit_muwave.power.start           -3  # min frequency in dBm
TaskParams.qubit_muwave.power.end            0   # max frequency in dBm


#######################################################################
#######################  Init Params ##################################
#######################################################################

InitParams.fluxPulse.device               AWG
InitParams.fluxPulse.m.reset              1
InitParams.fluxPulse.p.refOsc             External #reference oscillator can be 'External' or 'Internal'
InitParams.fluxPulse.p.samplingRate       1.2e9 #in Samp/sec
InitParams.fluxPulse.p.runMode            Triggered # [Sequence Continuous Triggered]
InitParams.fluxPulse.p.loopCount          1 # number of times to execute the waveform sequence
InitParams.fluxPulse.p.waveformDuration   200e-6 # MAXIMUM waveform duration in s
   
InitParams.readoutPulse.device              AWG
InitParams.readoutPulse.p.outputLoad          50 # Output load in Ohms (1-1e4)
InitParams.readoutPulse.p.burstMode           TRIG # {TRIGgered|GATed}
InitParams.readoutPulse.p.numWaveforms        1
InitParams.readoutPulse.p.triggerSource       EXT #{IMMediate|EXTernal|BUS}
InitParams.readoutPulse.p.burstState          ON # {ON|OFF}
InitParams.readoutPulse.p.waveformDuration    50e-6 # MAXIMUM waveform duration in s
InitParams.readoutPulse.p.samplingRate        30e6 #in Samp/sec

InitParams.triggerSource.device             AWG
InitParams.triggerSource.p.outputLoad         50 # Output load in Ohms (1-1e4)
InitParams.triggerSource.p.burstMode           TRIG # {TRIGgered|GATed}
InitParams.triggerSource.p.numWaveforms       3000
InitParams.triggerSource.p.triggerSource      BUS #{IMMediate|EXTernal|BUS}
InitParams.triggerSource.p.burstState          ON # {ON|OFF}
InitParams.triggerSource.p.waveformDuration   1e-3 # MAXIMUM waveform duration in s
InitParams.triggerSource.p.samplingRate       10e4 #in Samp/sec

InitParams.qubit_muwave.device              CWSource
#InitParams.qubit_muwave.m.CWMode    1

InitParams.readout_muwave.device            CWSource

#InitParams.scope.device             Scope
#InitParams.scope.m.reset              1
#InitParams.scope.p.channel_on         [1;1;0;0]
#InitParams.scope.p.record_length      500
#InitParams.scope.p.trigger_position   50
#InitParams.scope.p.trigger_ch         4
#InitParams.scope.p.trigger_slope      fall
#InitParams.scope.p.trigger_coupling   dc
#InitParams.scope.p.trigger_level      0.5
#InitParams.scope.p.horz_scale         0.5e-6
#InitParams.scope.p.acquire_mode       average
#InitParams.scope.p.num_avg            1000
#InitParams.scope.p.acquire_repetition off
#InitParams.scope.p.acquire_stopafter  sequence
#InitParams.scope.p.data_encoding      ascii
#InitParams.scope.p.data_width         2
#InitParams.scope.p.data_start         1
#InitParams.scope.p.data_stop          500
#InitParams.scope.p.time_unit          1e-6 # set time scale to micro seconds

#InitParams.scope.p.ch1.vert_scale     100e-3
#InitParams.scope.p.ch1.vert_position  0
#InitParams.scope.p.ch1.vert_offset    0
#InitParams.scope.p.ch1.vert_coupling  dc
#InitParams.scope.p.ch1.vert_impedance meg

#InitParams.scope.p.ch2.vert_scale     100e-3
#InitParams.scope.p.ch2.vert_position  0
#InitParams.scope.p.ch2.vert_offset    0
#InitParams.scope.p.ch2.vert_coupling  dc
#InitParams.scope.p.ch2.vert_impedance meg
#########################
InitParams.scope.device             Scope
#InitParams.scope.model_number       'AP120'; 
InitParams.scope.p.timeout            10000;  #10000 is max, ms

InitParams.scope.p.acquire_mode.value                    2; #2 - averager, 0 - normal, 1 - ???
InitParams.scope.p.acquire_mode.flags                    0; # set to zeros if value = 2, see manual otherwise
#InitParams.scope.p.acquire_mode = modeParams;

#Horizontal Config Parameters

InitParams.scope.p.horizontal.sampleInterval           2e-8; # sampling rate in seconds
InitParams.scope.p.horizontal.delayTime                0.0;  # time in seconds of delay between trigger 
                                            # and acquisition, can be positive or 
                                            # negative less than -(sampInterval*nbrSamples)
#InitParams.scope.horizontal = horzParams;

#TrigSource Config Parameters

InitParams.scope.p.trigger_ch         -1;      # 1 means 1, 2 means 2, -1 means ext
InitParams.scope.p.triggerSource.trigger_coupling      0;      # 0 - DC, 1 - AC, ... see manual
InitParams.scope.p.triggerSource.trigger_slope         1;     # 0 - positive, 1 - negative, ... see manual
InitParams.scope.p.triggerSource.trigger_level         300.0; # in mv when using external trigger_ch < 0
                                     # in percent of vertical when using internal >0

InitParams.scope.p.triggerSource.trigger_level2        0.0;  # ????
#InitParams.scope.triggerSource = trigSrcParams; 

#TrigClass Config Parameters
InitParams.scope.p.triggerClass       0;          % 0 - edge trigger, ... see manual
# trigClsParams.sourcePattern = hex2dec('80000000'); % ???
# trigClsParams.sourcePattern = 1;
# scope.triggerClass = trigClsParams;

InitParams.scope.p.channel_on         1;
#Vertical Config Parameters
#vertParams.vert_channel = scope.channel_on;
InitParams.scope.p.vertical.vert_scale               0.1;  # Volts
InitParams.scope.p.vertical.offset                   0;        # Hardware offset in Volts
InitParams.scope.p.vertical.vert_coupling            3; #  1 - DC 1M, 2 - AD 1M, 3 - DC 50, 4 - AC 50 
InitParams.scope.p.vertical.bandwidth                0;     # 0 - no filtering, 1 - 25 MHz, .. see driver comments for the rest
#InitParams.scope.p.vertical = vertParams;
	  
#Averager Config Parameters
InitParams.scope.p.averager.record_length        1024; # number of points
InitParams.scope.p.averager.nbrSegments          1;      # number of waveforms, just leave as 1
InitParams.scope.p.averager.num_avg              3000;        # number of averages
InitParams.scope.p.averager.ditherRange          0;      # ??? leave as 0
InitParams.scope.p.averager.trigResync           0;       # ??? leave as 0
InitParams.scope.p.averager.data_start           16;      # which point to start on in units of 16, min of 16
InitParams.scope.p.averager.data_stop            16;       # number of points to stop before the end in units of 16, min of 16
#averagerParams.nbrRoundRobins      1; seems like it might be useful
 #InitParams.scope.averager= averagerParams;

##

InitParams.scope.p.channel_on         2;
InitParams.scope.p.timeout            10000;  #10000 is max, ms

#vertParams.vert_channel = scope.channel_on;
InitParams.scope.p.vertical.vert_scale               0.1;  # Volts
InitParams.scope.p.vertical.offset                   0;
InitParams.scope.p.vertical.vert_coupling            3;
InitParams.scope.p.vertical.bandwidth                0;
#InitParams.scope.p.vertical = vertParams;

#Averager Config Parameters
InitParams.scope.p.averager.record_length        1024;
InitParams.scope.p.averager.nbrSegments          1;
InitParams.scope.p.averager.num_avg              3000;
InitParams.scope.p.averager.ditherRange          0;
InitParams.scope.p.averager.trigResync           0;
InitParams.scope.p.averager.data_start           32;
InitParams.scope.p.averager.data_stop            16;
#averagerParams.nbrRoundRobins      1; #seems like it might be useful
#InitParams.scope.averager = averagerParams;



#######################################################################
########################## Instr Params ###############################
#######################################################################

# Instrument paramters
InstrParams.AWG.deviceName              {'Tek5014';'Agilent33220A';'Agilent33220A'} #[tek5014 DACII Agilent33220A]
InstrParams.AWG.tag                     {'fluxPulse';'readoutPulse';'triggerSource'}
InstrParams.AWG.Address                 {'TCPIP::128.33.89.94::4000::SOCKET';7;6} # address

InstrParams.CWSource.deviceName         {'HP8673B','HP8340B'}
InstrParams.CWSource.tag                {'readout_muwave','qubit_muwave'}
InstrParams.CWSource.Address            {19;18}

#InstrParams.Scope.deviceName            {'TekTDS784A'}
#InstrParams.Scope.tag                   {'scope'}
#InstrParams.Scope.Address               {10}

InstrParams.Scope.deviceName            {'AgilentAP120'}
InstrParams.Scope.tag                   {'scope'}
InstrParams.Scope.Address               {'PCI::INSTR0'}

# The gpib substructure contains parameters used by the generic GPIB class
InstrParams.gpib.vendor              	ni #GPIB board vendor
InstrParams.gpib.boardindex         	0  #GPIB board index
